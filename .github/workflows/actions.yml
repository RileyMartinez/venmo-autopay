name: run venmo-autopay

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 1 * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: checkout repo content
        uses: actions/checkout@v3

      - name: setup python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: load cached poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true

      - name: load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          
      - name: install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: run program
        env:
          VENMO_ACCESS_TOKEN: ${{ secrets.VENMO_ACCESS_TOKEN }}
          VENMO_FUNDING_SOURCE_ID: ${{ vars.VENMO_FUNDING_SOURCE_ID }}
          VENMO_PAYMENT_AMOUNT_1: ${{ vars.VENMO_PAYMENT_AMOUNT_1 }}
          VENMO_PAYMENT_NOTE_1: ${{ secrets.VENMO_PAYMENT_NOTE_1 }}
          VENMO_PAYMENT_USER_ID_1: ${{ vars.VENMO_PAYMENT_USER_ID_1 }}
          VENMO_REQUEST_AMOUNT_1: ${{ vars.VENMO_REQUEST_AMOUNT_1 }}
          VENMO_REQUEST_NOTE_1: ${{ secrets.VENMO_REQUEST_NOTE_1 }}
          VENMO_REQUEST_USER_ID_1: ${{ vars.VENMO_REQUEST_USER_ID_1 }}
          VENMO_REQUEST_AMOUNT_2: ${{ vars.VENMO_REQUEST_AMOUNT_2 }}
          VENMO_REQUEST_NOTE_2: ${{ secrets.VENMO_REQUEST_NOTE_2 }}
          VENMO_REQUEST_USER_ID_2: ${{ vars.VENMO_REQUEST_USER_ID_2 }}
          SMTP_USERNAME: ${{ vars.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_PORT: ${{ vars.SMTP_PORT }}
          SMTP_SERVER: ${{ vars.SMTP_SERVER }}
          SMTP_SUBJECT: ${{ vars.SMTP_SUBJECT }}
          SMTP_TO: ${{ vars.SMTP_TO }}
        run: poetry run python main.py

      - name: commit files
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add main.log
          git diff-index --quiet HEAD || (git commit -a -m "Keep alive" --allow-empty)

      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main 
          
